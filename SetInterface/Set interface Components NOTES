SET INTERFACE NOTES:

-Set interface => is a collection of unique elements, meaning it cannot contain duplicate elements. 

Set
├── HashSet
├── LinkedHashSet
└── TreeSet

Explanation of components:

1.HashSet: Implements the Set interface using a hash table. It does not guarantee the order of elements and allows null elements.
          (A HashSet does not guarantee any specific order when iterating over its elements. Therefore, the output order is not guaranteed to be sorted in ascending order or any other specific order.)
     -T.C O(1) ->for add,delete,search

2.LinkedHashSet: Extends HashSet and maintains the insertion order of elements. It uses a doubly-linked list to maintain the order.
    -LinkedHashSet is similar to HashSet but maintains a doubly-linked list running through all of its entries. This allows it to maintain insertion order.
    -T.C O(1) ->for add,delete,search

3.TreeSet: Implements the Set interface using a red-black tree. It orders the elements based on their natural ordering or using a comparator provided at the time of creation.
    -TreeSet is implemented using a Red-Black Tree, a balanced binary search tree.
    -T.C O(logn) ->for add,delete,search
